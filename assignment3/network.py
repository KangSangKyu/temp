# -*- coding: utf-8 -*-
"""Untitled15.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uCIQwcTut6lMKrLOjB5itHtaLrVON8IO
"""

from tensorflow.keras import layers, models

class LSTM_FC(models.Model):

    def __init__(self, num_classes, max_features, max_len, units):
        super(LSTM_FC, self).__init__()

        self.num_classes = num_classes
        self.max_features = max_features
        self.max_len = max_len
        self.units = units
        self.embedding = layers.Embedding(self.max_features, 128)
        self.lstm = layers.LSTM(units)
        self.fc = layers.Dense(self.num_classes, activation="softmax")

    def call(self, x):
        x = self.embedding(x)
        x = self.lstm(x)
        x = self.fc(x)
        return x


class RNN_FC(models.Model):

  def __init__(self, num_classes, max_features, max_len, units):
    super(RNN_FC, self).__init__()

    self.num_classes = num_classes 
    self.max_features = max_features
    self.max_len = max_len  
    self.units = units
    self.embedding = layers.Embedding(self.max_features, 128)
    self.rnn = layers.SimpleRNN(units)
    self.fc = layers.Dense(self.num_classes, activation='softmax')

  def call(self, x):
    x = self.embedding(x)
    x = self.rnn(x)
    x = self.fc(x)
    return x